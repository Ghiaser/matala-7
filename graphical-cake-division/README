# Graphical Cake Division – חלוקה הוגנת של גרף



## מטרות הפרויקט

- לקלוט גרף (מערך קשתות בין צמתים)
- לקלוט פונקציות ערך של שני סוכנים
- לחלק את הקשתות בין הסוכנים כך שכל אחד יקבל חלק מחובר
- להבטיח ערך של לפחות ½ לסוכן אם הגרף חסר גשרים, או לפחות ⅓ אחרת
- להציג את הפלט בצורה אינטראקטיבית דרך אתר אינטרנט


## מבנה הקבצים בפרויקט

```graphical-cake-division
├── algorithm.py             # האלגוריתם שמבצע את חלוקת הגרף
├── test_algorithm.py        # בדיקות תקינות של האלגוריתם
├── app.py                   # שרת Flask להפעלת ממשק גרפי
├── requirements.txt         # ספריות דרושות להתקנה
├── templates/
│   ├── index.html           # טופס לבחירת סוג גרף
│   ├── result.html          # הצגת התוצאה לאחר חלוקה
│   └── about.html           # הסבר על המאמר והגישה האלגוריתמית
```


## הסבר על הקבצים

🔹 algorithm.py  
מכיל את המחלקה GraphicalCakeDivider. התפקיד שלה לבצע חלוקה של גרף לשני חלקים לפי פונקציות ערך של כל סוכן.  
כולל:
- divide(): בודקת האם הגרף חסר גשרים ומפנה לאסטרטגיה המתאימה
- _proportional_division(): חלוקה לסירוגין במידה והגרף חסר גשרים
- _guaranteed_third_division(): חלוקה מבוססת ערכים יחסיים כאשר יש גשרים

🔹 test_algorithm.py  
קובץ בדיקות באמצעות pytest. כולל בדיקות עבור גרפים מחזוריים, גרפים עם גשרים ומקרים פשוטים.

🔹 app.py  
יישום מבוסס Flask שמאפשר להפעיל את האלגוריתם בדפדפן.  
משתמש יכול לבחור גרף (קבוע או אקראי), להריץ חלוקה ולקבל תוצאה לכל סוכן.

🔹 templates/  
תיקייה עם תבניות HTML: דף ראשי, דף תוצאה ודף אודות.


## הפעלה

1. התקנת הספריות:

```bash
pip install -r requirements.txt
```

2. הרצת הבדיקות (רשות):

```bash
pytest --verbose test_algorithm.py
```

3. הרצת האתר:

```bash
python app.py
```

4. פתיחה בדפדפן:

```
http://127.0.0.1:5000
```




